<!doctype html>
<html lang="en" data-bs-theme="dark">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Status</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">

  <style>
    body {
      background: linear-gradient(135deg, #0b0f19, #141b2d, #0a1018);
      color: #f8f9fa;
      min-height: 100vh;
      margin: 0;
      display: flex;
      flex-direction: column;
      position: relative;
      overflow: hidden;
    }

    #particles-js {
      position: fixed;
      inset: 0;
      z-index: 0;
      pointer-events: none;
    }

    .main-container {
      flex: 1;
      display: flex;
      align-items: center;
      justify-content: center;
      position: relative;
      z-index: 1;
    }

    .status-card {
      border: none;
      border-radius: 1.25rem;
      background: rgba(30, 33, 42, 0.9);
      backdrop-filter: blur(10px);
      box-shadow: 0 8px 28px rgba(0, 0, 0, 0.65);
      overflow: hidden;
      max-width: 500px;
      margin: auto;
      min-height: 250px;
      display: flex;
      flex-direction: column;
    }

    .card-header {
      background: rgba(255, 255, 255, 0.05);
      font-weight: 600;
      font-size: 1rem;
      letter-spacing: 0.5px;
      text-transform: uppercase;
      color: #9ca3af;
    }

    .card-body {
      flex: 1;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .status-title {
      font-size: 1.75rem;
      font-weight: 600;
      margin: 0;
      color: #f1f5f9;
    }

    .card-footer {
      background: rgba(255, 255, 255, 0.05);
      color: #4ade80;
      font-weight: 500;
    }

    footer {
      padding: 12px;
      font-size: 0.95rem;
      text-align: center;
      background: linear-gradient(90deg, rgba(74,222,128,0.08), rgba(56,189,248,0.08));
      border-top: 1px solid rgba(255, 255, 255, 0.05);
      backdrop-filter: blur(6px);
      position: relative;
      z-index: 1;
    }

    footer a {
      font-weight: 600;
      background: linear-gradient(90deg, #4ade80, #38bdf8, #a78bfa);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      text-decoration: none;
    }

    footer a:hover {
      text-decoration: underline;
    }
  </style>
</head>
<body>
  <div id="particles-js"></div>

  <div class="main-container">
    <div class="card status-card text-center">
      <div class="card-header">
        <i class="fa-solid fa-globe"></i>
        &nbsp; Your new sub-domain is live &nbsp;
        <i class="fa-solid fa-signal"></i>
      </div>
      <div class="card-body">
        <h1 class="status-title">
          <?php
            $host = $_SERVER['HTTP_HOST'] ?? '';
            $host = preg_replace('/:\\d+$/', '', $host);

            if (filter_var($host, FILTER_VALIDATE_IP) || $host === '') {
              $display = htmlspecialchars($host, ENT_QUOTES, 'UTF-8');
            } else {
              $parts = explode('.', $host);
              if (count($parts) >= 3) {
                $sub = $parts[0];
                $display = strtoupper(preg_replace('/[^a-z0-9-]/i', '', $sub));
              } else {
                $display = htmlspecialchars($host, ENT_QUOTES, 'UTF-8');
              }
            }

            echo $display;
          ?>
        </h1>
      </div>
      <div class="card-footer">
        <i class="fa-solid fa-circle-check"></i> It works
      </div>
    </div>
  </div>

  <footer>
    created by <a href="https://gingerdev.pro" target="_blank">GingerDev.pro</a>
  </footer>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/particles.js@2.0.0/particles.min.js"></script>
  <script>
    particlesJS("particles-js", {
      particles: {
        number: { value: 90, density: { enable: true, value_area: 800 } },
        color: { value: ["#4ade80", "#38bdf8", "#a78bfa"] },
        shape: { type: "circle" },
        opacity: { value: 0.45, random: true },
        size: { value: 3, random: true },
        line_linked: {
          enable: true,
          color: "#38bdf8",
          opacity: 0.35,
          distance: 140,
          width: 1
        },
        move: { enable: true, speed: 2.2 }
      },
      interactivity: {
        detect_on: "window",
        events: {
          onhover: { enable: true, mode: "grab" },
          onclick: { enable: true, mode: "push" },
          resize: true
        },
        modes: {
          grab: { distance: 140, line_linked: { opacity: 0.5 } },
          push: { particles_nb: 4 }
        }
      },
      retina_detect: true
    });

    (function enableMagnet() {
      const p = window.pJSDom && window.pJSDom[0] && window.pJSDom[0].pJS;
      if (!p) return;

      const RADIUS = 160;
      const STRENGTH = 0.035;
      const MAX_SPEED = 3.0;

      let mouseInside = false;

      window.addEventListener("mousemove", () => { mouseInside = true; }, { passive: true });
      window.addEventListener("mouseleave", () => { mouseInside = false; }, { passive: true });

      function loop() {
        if (mouseInside && p.interactivity.mouse.pos) {
          const mx = p.interactivity.mouse.pos.x;
          const my = p.interactivity.mouse.pos.y;

          for (let i = 0; i < p.particles.array.length; i++) {
            const part = p.particles.array[i];
            const dx = mx - part.x;
            const dy = my - part.y;
            const dist = Math.sqrt(dx*dx + dy*dy);

            if (dist > 0 && dist < RADIUS) {
              const force = (1 - dist / RADIUS) * STRENGTH;
              part.vx += (dx / dist) * force;
              part.vy += (dy / dist) * force;

              const v = Math.sqrt(part.vx*part.vx + part.vy*part.vy);
              if (v > MAX_SPEED) {
                part.vx = (part.vx / v) * MAX_SPEED;
                part.vy = (part.vy / v) * MAX_SPEED;
              }
            }
          }
        }
        requestAnimationFrame(loop);
      }
      requestAnimationFrame(loop);
    })();

    function touchToMouse(type, touch){
      window.dispatchEvent(new MouseEvent(type, {
        clientX: touch.clientX,
        clientY: touch.clientY,
        bubbles: true,
        cancelable: true
      }));
    }

    document.addEventListener("touchstart", (e) => {
      if (e.touches[0]) {
        touchToMouse("mousemove", e.touches[0]);
        touchToMouse("click",    e.touches[0]);
      }
    }, { passive: true });

    document.addEventListener("touchmove", (e) => {
      if (e.touches[0]) touchToMouse("mousemove", e.touches[0]);
    }, { passive: true });

    document.addEventListener("touchend", () => {
      window.dispatchEvent(new MouseEvent("mouseleave", { bubbles: true }));
    }, { passive: true });
  </script>
</body>
</html>
